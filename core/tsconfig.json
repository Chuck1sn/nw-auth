{
  "compilerOptions": {
    "target": "esnext", // 指定编译的 ECMAScript 版本
    "module": "esnext", // 指定编译生成哪个模块的系统代码，
    "outDir": "dist", // 编译输出目录，即 .ts 文件编译成 .js 文件后的输出目录。这里设置为根目录下的 /dist 目录
    "strict": true, // 严格模式
    "noImplicitAny": false, // 在表达式和声明上有隐含的 any类型时报错。设为 false 避免当类型推论为 any 时报错
    "moduleResolution": "node", // 决定如何处理模块。设置为 node
    "baseUrl": "./", // 定义 ts 项目的根目录，设置 paths 前必须设置
    //定义路径别名,即当我们通过路径引入一个模块时，可以使用别名来进行引入，这里第一个 * 设置是为了引入第三方模块; 第二个 '@/*' 则是为了直接快捷的导入 /src 下的模块。
    "paths": {
      "*": [
        "node_modules/*",
        "src/types/*"
      ],
      "@/*": [
        "src/*"
      ]
    },
    "esModuleInterop": true,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "sourceMap": true,
    "declaration": true,
    "declarationMap": true
  },
}
